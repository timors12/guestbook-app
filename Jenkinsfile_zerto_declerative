pipeline {
    agent { node { label 'slave_52.14.210.84' } }
    parameters {
        string(name: 'DockerImage', defaultValue: 'hezil/guestboo', description: '')
        string(name: 'ContainerName', defaultValue: 'guestbook', description: '')
    }
    stages {
        stage('Pre') { // Run pre-build steps
            steps {
                echo 'Pre..'
                cleanWs()
                sh "docker container rm -f ${params.ContainerName} || true"
            }
        }
        stage('Set Git repo') {
            steps {
                echo 'set Git repo..'
                git url: 'https://github.com/hezil/guestbook-app.git', branch: 'master'
            }
        }
        stage('Build docker image') {
            steps {
                echo 'Build docker image..'
                dir ('php-redis/') {
                    sh "docker build --tag ${params.DockerImage} ."
                }

            }
        }
        stage('Run docker image') {
            steps {
                echo 'Run docker image....'
                sh "docker run -d --name ${params.ContainerName} --rm -p 8088:80 ${params.DockerImage}; sleep 5"
            }
        }
        stage('Test image') {
            steps {                
                def dockerOutput = sh (
                    script: 'curl -s --head  --request GET http://172.17.0.1:8088 | grep "200 OK" | wc -l',
                    returnStdout: true
                    ).trim()
                if ( dockerOutput == "1" ) {
                    currentBuild.result = 'SUCCESS'
                } else {
                    currentBuild.result = 'FAILURE'
                    sh "echo webserver returned ${dockerOutput}"
                }

            }
        }
        stage('Push') { // push image to docker hub
            steps {
                echo 'Push image to docker hub....'
                withDockerRegistry(credentialsId: 'hezil_dockerhub') {
                    sh "docker push ${params.DockerImage}"
                    sh "docker rmi ${params.DockerImage}"
                }
            }
        }
        stage('Cleanup') { // Remove docker Container and image
            steps {
                echo 'Pre..'
                cleanWs()
                sh "docker container stop ${params.ContainerName} || true"
                sh "docker container rm -f ${params.ContainerName} || true"
                sh "docker image rm -f ${params.DockerImage} || true"
            }
        }
    }
}
